require 'rsmolagent'
require 'ruby/openai'

# Initialize the OpenAI client
client = OpenAI::Client.new(access_token: ENV["OPENAI_API_KEY"])

# Create the LLM provider
llm = RSmolagent::OpenAIProvider.new(
  model_id: "gpt-3.5-turbo",
  client: client,
  temperature: 0.2
)

# Create a custom tool executor
custom_executor = RSmolagent::Tools::CustomClassExecutorTool.new(
  name: "create_tool",
  description: "Creates a custom tool that can be used by the agent. The tool must be defined as a class that inherits from CustomToolBase and implements a run method."
)

# Create a basic calculator tool directly (for comparison)
calculator_tool = RSmolagent::Tool.new(
  name: "calculator",
  description: "Performs basic arithmetic calculations",
  input_schema: {
    expression: {
      type: "string",
      description: "The mathematical expression to evaluate (e.g., '2 + 2', '5 * 3')"
    }
  }
) do |args|
  expression = args[:expression]
  begin
    eval(expression).to_s
  rescue => e
    "Error: #{e.message}"
  end
end

# Create the agent
agent = RSmolagent::Agent.new(
  llm_provider: llm,
  tools: [custom_executor, calculator_tool],
  system_prompt: "You are an AI assistant that can create and use custom tools. You have access to a 'create_tool' tool that allows you to define custom Ruby tools, and then use them to solve tasks.",
  max_steps: 10
)

# Example Custom Weather Tool Code (this would be generated by the AI)
WEATHER_TOOL_CODE = <<~RUBY
class WeatherTool < CustomToolBase
  def initialize
    super(
      "weather",
      "Gets the current weather for a specified location",
      {
        location: {
          type: "string",
          description: "The city or location to get weather for"
        }
      }
    )
  end
  
  def run(args)
    location = args[:location].to_s.downcase
    
    # Mock weather data (in a real tool, this would call a weather API)
    weather_data = {
      "new york" => "72°F, Partly Cloudy",
      "san francisco" => "65°F, Foggy",
      "miami" => "85°F, Sunny",
      "london" => "60°F, Rainy",
      "tokyo" => "75°F, Clear"
    }
    
    if weather_data.key?(location)
      "Current weather in #{location.capitalize}: #{weather_data[location]}"
    else
      # Default response for unknown locations
      "Weather information not available for #{location}"
    end
  end
end
RUBY

# Option 1: Create a tool from code directly (without agent)
puts "Creating a weather tool directly from code..."
weather_tool = RSmolagent::Tools::CustomToolFactory.create_from_code(WEATHER_TOOL_CODE)
puts "Weather tool created. Testing..."
puts weather_tool.call(location: "london")
puts

# Option 2: Let the agent create and use the tool
puts "Now letting the agent create and use custom tools..."
puts "What would you like to ask?"
question = gets.chomp

result = agent.run(question, verbose: true)
puts "\nFinal Answer: #{result}"